openapi: 3.0.3
info:
  title: Django REST API Boilerplate
  description: |
    Production-ready Django REST API with simplified domain-driven design.

    **NOTE:** This is an example OpenAPI specification. The actual API documentation
    is auto-generated by drf-spectacular and available at:
    - Swagger UI: http://localhost:8000/api/docs/
    - OpenAPI Schema: http://localhost:8000/api/schema/

    Update this file with your own API specification, or delete it if using
    auto-generated documentation only.
  contact:
    email: your-email@example.com
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://your-domain.com/api
    description: Production server (update with your domain)





paths:
  # EXAMPLE ENDPOINTS - Replace with your own API endpoints
  # The boilerplate includes example cryptocurrency endpoints that should be replaced

  /process_request:
      get:
        summary: "[EXAMPLE] Process a request for input"
        description: "[EXAMPLE ENDPOINT] Get the results of a call to the api for a given crypto currency at a specific initial investment. Replace this with your own endpoints."
        parameters:
          - in: query
            name: symbol
            schema:
              type: string
            description: The symbol of the crypto currency token
          - in: query
            name: investment
            schema:
              type: integer
            description: The initial investment for the given symbol
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Response'
          '400':
            description: Bad request. There was an issue with the structure of the query
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bad_Response'




components:
  schemas:

    Request:
      type: object
      properties:
        symbol:
          type: string
          example: ETH
        investment:
          type: integer
          example: 123
      # Both properties are required
      required:
        - symbol
        - investment

    Response:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/responses/ResponseItem'
          type: object

        graph_data:
          type: array
          items:
            $ref: '#/responses/GraphItem'
          example:
            - x: 10-12-2022
              y: 1234.5
            - x: 11-12-2022
              y: 1235.5

      required:
        - message
        - graph_data

    Bad_Response:
      type: object
      properties:
        message:
          type: string
          example: 'Server Failure'

      required:
        - message



responses:
  ResponseItem:
      type: object
      properties:
        NUMBERCOINS:
          type: float
          example: 1.34
        PROFIT:
          type: float
          example: 38
        GROWTHFACTOR:
          type: float
          example: 38
        LAMBOS:
          type: float
          example: 38
        INVESTMENT:
          type: integer
          example: 38
        SYMBOL:
          type: string
          example: ETH
        GENERATIONDATE:
          type: date
          example: 10-12-2022
      required:
        - NUMBERCOINS
        - PROFIT
  GraphItem:
    type: object
    properties:
      x:
        type: date
        example: 10-12-2022
      y:
        type: float
        example: 1234.5
    required:
      - x
      - y
