[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-backend-api"
version = "1.0.0"
description = "Backend API for cryptocurrency portfolio tracking and analysis"
requires-python = ">=3.10,<3.14"
readme = "README.md"
authors = [
    {name = "Development Team"}
]

dependencies = [
    "Django>=5.2.7",
    "djangorestframework>=3.15.2",
    "django-cors-headers>=3.13.0",
    "pandas>=1.5.1",
    "numpy>=1.23.4",
    "requests>=2.28.1",
    "beautifulsoup4>=4.12.3",
    "matplotlib>=3.8.3",
    "seaborn>=0.13.2",
    "scikit-learn>=1.4.1",
    "strawberry-graphql>=0.208.3",
    "django-environ>=0.11.2",
    "gunicorn>=21.2.0",
    "psycopg2-binary>=2.9.9",
    "whitenoise>=6.6.0",
    "dj-database-url>=2.1.0",
    "sentry-sdk>=1.40.0",
    "django-prometheus>=2.3.1",
    "python-json-logger>=2.0.7",
    "drf-spectacular>=0.27.0",
    "redis>=5.0.1",
    "django-redis>=5.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-django>=4.5.2",
    "pytest-cov>=4.1.0",
    "black>=23.12.1",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "bandit>=1.7.6",
    "safety>=3.0.1",
    "pre-commit>=3.6.0",
    "isort>=5.13.2",
    "django-stubs>=4.2.7",
    "djangorestframework-stubs>=3.14.5",
    "types-requests>=2.31.0",
    "coverage>=7.4.0",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
testpaths = ["backend"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov=backend",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",
    "--cov-report=html",
    "--cov-branch",
]
markers = [
    "django_db: mark test as requiring database access",
    "unit: mark test as unit test",
    "integration: mark test as integration test",
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]

[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
# plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]  # Disabled - requires django-stubs

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.bandit]
exclude_dirs = ["/tests", "/migrations"]
skips = ["B101", "B601"]
